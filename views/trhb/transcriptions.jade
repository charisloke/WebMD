// jScrollPane
- cssScripts.push('/stylesheets/jquery.jscrollpane.css')
- scripts.push('/javascripts/jquery.jscrollpane.min.js')
- scripts.push('/javascripts/jquery.mousewheel.js')
- scripts.push('/waypoints/waypoints.min.js')
//script(type='text/javascript', src='/javascripts/mwheelIntent.js')
.container-fluid.sidebarContainer
  .row-fluid
    .span3
      .well.sidebar-nav.box-with-shadow
        //-
          !=partial('searchPartial', {
            locals: {
              type: type,
              searchItems: searchItems,
              search: search
            }
          })
          | adsf
        - if (type === 'transcriptions')
          h5 Search Transcriptions
        - else
          a.btn.btn-primary(href='/createBounty/') + &nbsp   Create Bounty
          h5 Search Bounties
        form#searchSidebar(method='get', action='/search')
          input(type='text', name='search[title]', placeholder='Title', value=search.title || "")
          input(type='text', name='search[artist]', placeholder='Artist', value=search.artist || "")
          input(type='text', name='search[album]', placeholder='Album', value=search.album || "")
          input(type='text', name='search[instrument]', placeholder='Instrument', value=search.instrument || "")
          //input.hidden(type='text', name='search[type]', value={type})
          - if (type === 'transcriptions')
            input#searchType.jqueryHide(type='text', name='search[type]', value='transcriptions')
          - else
            input#searchType.jqueryHide(type='text', name='search[type]', value='bounty')
          input.btn.primary#searchSidebarSubmit(type='submit', value='Search')

        .clearfix
          .inline Sort by:
          div.input.inline
            select.select-auto-width#sortSelect
              option Votes
              option Title
              option Artist
              option Album
              option Instrument
              option Date Uploaded

        // Pass numSearchItems to javascripts script
        // in a hacky way
        - numSearchItems = searchItems.length
        input(type='hidden', id='numSearchItems', value=numSearchItems)
        .search-pane#search-results
          - for (var sIndex in searchItems)
            - if (sIndex <= 100)
              - divName = 'search' + sIndex
              - s = searchItems[sIndex]
              - if (type === 'transcriptions')
                - ajaxUrl = '/getTranscription/' + s.id
              - else
                - ajaxUrl = '/getBounty/' + s.id
              //div(id=divName, ajaxUrl=ajaxUrl, sId=s.id, hasVoted=s.hasVoted).row.search-box.btn
              div(id=divName, ajaxUrl=ajaxUrl, sId=s.id).row.search-box.btn
                .row
                  .span
                    - if (type === 'transcriptions')
                      .votesArrows(class=searchItems[sIndex].id)
                        img.upVoteImg(src='/images/arrow2Up.png')
                        .numKarmaSearch.numVotes
                          = s.votes
                        img.downVoteImg(src='/images/arrow2.png')
                    - else
                      .numPointsBountySearch
                        = s.points
                  .span
                    .search-result-fields
                      .title
                        = s.title
                      .artist
                        = s.artist
                      .album
                        = s.album
                      .instrument
                        = s.instrument
                      .readable-date-uploaded
                        = s.uploadDateStr
                      .dateuploaded.jqueryHide
                        = s.uploadTime
                      .votes.jqueryHide
                        = s.votes
              br
            - else if (sIndex == 101)
              .asdf
                | Results clipped! Too many results (more than 100), try narrowing your search.
    .span9
      .content.box-with-shadow.content-box
        #search-display
          - if (searchItems.length > 0)
            - if (type === 'transcriptions')
              !=partial('transcriptionDisplay', {locals: { t: searchItems[0], user:user}})
            - else
              !=partial('bountyDisplay', {locals: { b: searchItems[0] }})

  //var numTranscriptions = $('#numTranscriptions').val();
  //
    - numSearchItems = searchItems.length
    - var trId = 1;
    - for (var i = 0; i < numSearchItems; i++) {
      != '<script type="text/javascript">'
      != "$('#search' + "
      != i
      != ").click(function() {"
        - if (type === 'transcriptions')
          != "$.get('/transcriptions/' + '"
        - else
          != "$.get('/bounty/' + '"
        != searchItems[i].id
        != "' + '.html',"
        != "function(html) {$('#search-display').html(html);},"
        != "'html'"
        != ");"
      != '});'
      != '</script>'
    - }

script(type='text/javascript')
  function setVoteArrowColors(type, trId) {
    // Reset both in case we're switching
    $('.' + trId + ' .downVoteImg').attr('src', "/images/arrow2.png");
      $('.' + trId + ' .upVoteImg').attr('src', "/images/arrow2Up.png");

    if (type == 1) {
      $('.' + trId + ' .downVoteImg').attr('src', "/images/selectedArrow.png");
    } else if (type == 2) {
      $('.' + trId + ' .upVoteImg').attr('src', "/images/selectedArrowUp.png");
    }
  }

  // Facebook
  var initFbComments = function() {
  (function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "//connect.facebook.net/en_US/all.js#xfbml=1&appId=278190265572756";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'))};
  //initFbComments();

  $(function() {
    var numSearchBoxes = 0;
    function getHasVoted(div) {
      var trId = div.attr('sId');
      $.get('/hasVoted/' + trId, function(hasVoted) {
        //console.log(hasVoted);
        if (hasVoted) {
          //setVoteArrowColors($(this).attr('hasVoted'), trId);
          setVoteArrowColors(hasVoted, trId);
        }
      });
    }
    $('.search-box').each(function(index, elem) {
      numSearchBoxes += 1;
      //getHasVoted($(this));
      //console.log($(this));
    });
    function initSearchBoxes() {
      var activeSearch = $('#search0');
      activeSearch.addClass('active');
      if (activeSearch.attr('sid')) {
        parent.location.hash= 'Transcription_ID=' + $('#search0').attr('sid');
      }

      $('.search-box').click(function() {
        var ajaxUrl = $(this).attr('ajaxUrl');
        var buttonId = '#' + $(this).attr('id');
        // Only update if doing something
        if (!$(this).hasClass('active')) {
          $('.search-box').removeClass('active');
          $(buttonId).addClass('active');
          $.get(ajaxUrl, function(obj) {
            $('#search-display').html(obj.html);
            $('#facebook-jssdk').remove();
            //initFbComments();
            var stateObj = {
              selectedButtonId: buttonId
            }
            history.pushState(stateObj, 'asff', obj.url);
            parent.location.hash= 'Transcription_ID=' + $('#search0').attr('sid');
            $('.jqueryHide').hide();
          });
        }
      });
    }

    initSearchBoxes();
    window.onpopstate = function(e) {
      if (e && e.state && e.state.selectedButtonId) {
        $(e.state.selectedButtonId).click();
      }
    }

    // use jScrollPane for search scroll pane
    var searchPane = $('#search-results');
    var api;
    function initSearchPane() {
      api = searchPane.jScrollPane({
        showArrows: true,
        autoReinitialise: true
      }).data('jsp');
    };
    initSearchPane();

    // Get hasVoted as user scrolls, to help loading of page
    var searchIdNum = 0;
    var currHeight = 0;
    var searchPaneHeight = searchPane.height();
    function getVoteArrowsScroll(yPos) {
      for (; searchIdNum < numSearchBoxes; searchIdNum++) {
        if (currHeight > yPos + searchPaneHeight + 50) {
          break;
        }
        var searchDiv = $('#search' + searchIdNum);
        getHasVoted(searchDiv);
        var scrollBoxHeight = searchDiv.height();
        currHeight += scrollBoxHeight;
      }
    };
    searchPane.bind('jsp-scroll-y', function(event, scrollYPos, isAtTop, isAtBottom) {
      getVoteArrowsScroll(scrollYPos);
    });

    // For sort select
    var list = $('#search-results').find('.jspPane');
    function sortSearchResults(type, descending, isNum) {
      //var listItems = list.find('.search-box').get();
      var listItems = list.children().filter('.search-box').get();
      listItems.sort(function(a, b) {
        var compA = $.trim($(a).find('.' + type).html()).toLowerCase();
        var compB = $.trim($(b).find('.' + type).html()).toLowerCase();
        if (isNum) {
          compA = parseInt(compA);
          compB = parseInt(compB);
        }
        if (descending) {
          return (compA < compB) ? 1 : (compA > compB) ? -1 : 0;
        } else {
          return (compA < compB) ? -1 : (compA > compB) ? 1 : 0;
        }
      });
      //listItems.appendTo(list);
      api.getContentPane().empty();
      api.getContentPane().append(listItems);
      api.reinitialise();
      //searchPane.empty().jScrollPane();
      $.each(listItems, function(idx, itm) {
        //searchPane.append(itm).jScrollPane();
      });
      //initSearchPane();
      //searchPane.append($('<p>Nothing to see here</p>')).jScrollPane();
      initSearchBoxes();
    }
    $('#sortSelect').change(function() {
      var type = $(this).val();
      type = type.toLowerCase();
      type = type.replace(/ /g, '');
      var descending = false;
      var isNum = false;
      if (type === 'votes' || type === 'dateuploaded') {
        descending = true;
        isNum = true;
      }
      sortSearchResults(type, descending, isNum);
    });
  });
